/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Lock {
            bindings = <&kp LG(L)>;
            key-positions = <40 49>;
            require-prior-idle-ms = <175>;
        };

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <30 43>;
            require-prior-idle-ms = <175>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <31 44>;
            require-prior-idle-ms = <175>;
        };

        BT2 {
            bindings = <&bt BT_CLR>;
            key-positions = <32 45>;
            require-prior-idle-ms = <175>;
        };

        BTClear {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <33 46>;
            require-prior-idle-ms = <175>;
        };

        ParenthesisCOMBO {
            bindings = <&ParenthesisC>;
            key-positions = <7 9>;
            require-prior-idle-ms = <250>;
        };

        BracketCOMBO {
            bindings = <&BracketC>;
            key-positions = <21 19>;
            require-prior-idle-ms = <250>;
        };

        CurlyCOMBO {
            bindings = <&CurlyC>;
            key-positions = <37 35>;
            require-prior-idle-ms = <250>;
        };

        AngleCOMBO {
            bindings = <&AngleC>;
            key-positions = <36 37>;
            require-prior-idle-ms = <250>;
        };

        LParen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
            require-prior-idle-ms = <250>;
        };

        RParen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
            require-prior-idle-ms = <250>;
        };

        LBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <20 19>;
            require-prior-idle-ms = <250>;
        };

        RBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 21>;
            require-prior-idle-ms = <250>;
        };

        LCurly {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <36 35>;
            require-prior-idle-ms = <250>;
        };

        RCurly {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <36 37>;
            require-prior-idle-ms = <250>;
        };

        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <0 12>;
            require-prior-idle-ms = <175>;
        };

        Exc {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
            require-prior-idle-ms = <175>;
        };

        At {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
            require-prior-idle-ms = <175>;
        };

        Hash {
            bindings = <&kp HASH>;
            key-positions = <15 3>;
            require-prior-idle-ms = <175>;
        };

        Dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
            require-prior-idle-ms = <175>;
        };

        Percent {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
            require-prior-idle-ms = <175>;
        };

        Caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
            require-prior-idle-ms = <175>;
        };

        Ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
            require-prior-idle-ms = <175>;
        };

        Asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <20 8>;
            require-prior-idle-ms = <250>;
        };
    };

    macros {
        ParenthesisC: Parentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "PARENTHESES";
        };

        BracketC: BracketC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "BRACKETC";
        };

        CurlyC: CurlyC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET) &kp LEFT>;
            label = "CURLYC";
        };

        AngleC: AngleC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(COMMA) &kp LS(PERIOD) &kp LEFT>;
            label = "ANGLEC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alphas {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E    |  R   |  T   |                                      |  Y   |  U   |  I    |  O   |   P   | BCKSP |
            // |  TAB  |  A  |  S  |  D    |  F   |  G   |                                      |  H   |  J   |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C    |  V   |  B   | DELETE  |  ENT  |  |  WIN  |  TO(1)  |  N   |  M   |  ,    |  .   |  / \  | ENTER |
            //                     | PRTSC |  ALT | CTRL | L(2)/SP |  L(4) |  |  L(3) | L(2)/SP | CTRL |  ALT | PL/PA |

            bindings = <
&kp ESC     &kp Q  &kp W  &kp E            &kp R         &kp T                                                                              &kp Y              &kp U  &kp I             &kp O    &kp P                &kp BACKSPACE
&kp TAB     &kp A  &kp S  &kp D            &kp F         &kp G                                                                              &kp H              &kp J  &kp K             &kp L    &kp SEMICOLON        &kp SQT
&caps_word  &kp Z  &kp X  &kp C            &kp V         &kp B             &kp DELETE   &kp BACKSPACE  &kp RIGHT_WIN  &to 1                 &kp N              &kp M  &kp COMMA         &kp DOT  &mt BACKSLASH SLASH  &key_repeat
                          &kp PRINTSCREEN  &kp LEFT_ALT  &kp LEFT_CONTROL  &lt 2 SPACE  &lt 5 ENTER    &lt 3 ENTER    &mt LEFT_SHIFT SPACE  &kp RIGHT_CONTROL  &mo 4  &kp C_PLAY_PAUSE
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp LC(RIGHT) LC(LEFT)>;
        };

        ColemakDH {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |  Q   |  W   |  F   |  P   |  B   |                                         |  J   |  L   |  U   |  Y   |  ;   |      |
            // |       |  A   |  R   |  S   |  T   |  G   |                                         |  M   |  N   |  E   |  I   |  O   |      |
            // |       |  Z   |  X   |  C   |  D   |  V   |      |      |      |      |      |TO(0) |  K   |  H   |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &kp Q  &kp W  &kp F   &kp P   &kp B                                   &kp J   &kp L   &kp U   &kp Y   &kp SEMICOLON  &trans
&trans  &kp A  &kp R  &kp S   &kp T   &kp G                                   &kp M   &kp N   &kp E   &kp I   &kp O          &trans
&trans  &kp Z  &kp X  &kp C   &kp D   &kp V   &trans  &trans  &trans  &trans  &kp K   &kp H   &trans  &trans  &trans         &trans
                      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        NumLayer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |  /   |  7   |  8   |  9   |  -   |                                         |  /   |  7   |  8   |  9   |  -   |      |
            // | NMLCK |  *   |  4   |  5   |  6   |  +   |                                         |  *   |  4   |  5   |  6   |  +   |  =   |
            // |       |  0   |  1   |  2   |  3   |  .   | BKSP |      |      |      |      |      |  0   |  1   |  2   |  3   |  .   |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp KP_NUMLOCK  &kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                                   &kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS   &trans
&kp CAPS        &kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS                                    &kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS    &kp EQUAL
&kp EQUAL       &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &trans  &trans  &trans  &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &trans
                                                  &trans           &trans           &trans      &trans  &trans  &trans  &trans  &trans           &trans           &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_FAST_FORWARD C_REWIND>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        NavLayer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |      |      |      |      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |                                         | HOME |  UP  | END  |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      | LEFT | DOWN | RGHT |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans    &trans        &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp HOME  &kp UP_ARROW  &kp END    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        FNLayer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5  |                                         |      |  F7  |  F8  |  F9  |      |      |
            // |       |  F6  |  F7  |  F8  |  F9  |  F10 |                                         |      |  F4  |  F5  |  F6  |      |      |
            // |       |  F11 |  F12 |      |      |      |      |      |      |      |      |      |      |  F1  |  F2  |  F3  |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                                   &trans  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10                                  &trans  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &kp F1  &kp F2  &kp F3  &trans  &trans
                          &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        NXLayer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | REPEAT| RFRSH| RESET| NORM | DESEL| RDISP|                                         |      |      |      |      |      |      |
            // | NAME  | FEAT | FACE | BODY | EDGE | MEAS |                                         |      |      |      |      |      |      |
            // | MODEL | SETR |RESETR| SECT | DISP | HIDE |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp F4  &kp F5      &kp F6      &kp F8     &kp F9     &kp F12                                    &trans  &trans  &trans  &trans  &trans  &trans
&kp F2  &kp LS(F)   &kp LS(G)   &kp LS(B)  &kp LS(E)  &kp L                                      &trans  &trans  &trans  &trans  &trans  &trans
&kp M   &kp LC(F2)  &kp LC(F3)  &kp LC(H)  &kp LC(J)  &kp LC(B)  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
